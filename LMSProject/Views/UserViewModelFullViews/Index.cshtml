@model IEnumerable<LMSProject.Models.UserViewModelFullView>

@{
    ViewBag.Title = "Index";
}

<h2>Welcome</h2>

<h1>
    @ViewBag.RoleName: @ViewBag.UserName
</h1>
<p>
    UserID: @ViewBag.UserId
</p>

<table class="table userfullview">
    <tr>
        <th>
            School Classes
        </th>
    </tr>

@foreach (var item in (IEnumerable<SelectListItem>)ViewBag.schoolClassList) {
    <tr>
        <td>
            @Html.DisplayFor(x => item.Text)
        </td>
    </tr>
}

</table>


<table class="table userfullview">
    <tr>
        <th>
            Folders
        </th>
    </tr>
@{
    foreach (var item in (IEnumerable<LMSProject.Models.folder>)ViewBag.folderList)
    {
        
        if (item.folderTypes.folderTypeID == 2) {
        <tr>
            <td>
        
        
            @Html.Raw(item.name)
            @using (Html.BeginForm("UploadShared", "UserViewModelFullViews", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
            <div class="col-md-10">
                <input type="file" name="attachment" lang="en-gb"/>
                <input type="hidden" name="folderID" value="@item.folderID"/>
            </div> 
                <input type="submit" value="Add" />
            }
         
         

            </td>
        </tr>
    }
    }
}
</table>


<table class="table userfullview">
    <tr>
        <th>
            Tasks
        </th>
    </tr>

    @foreach (var item in (IEnumerable<LMSProject.Models.task>)ViewBag.TaskList)
    {
        <tr>
            <td>@{
        using (Html.BeginForm("UploadTask", "UserViewModelFullViews", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                @Html.AntiForgeryToken()
                @Html.Raw(item.schoolClasses.name)<p> </p>
                @Html.Raw(item.name)
                
                    <input type="file" name="attachment" style="display:inline"/>    <input type="submit" value="Add" style="display:inline" />
                    <input type="hidden" name="folderID" value="@item.folderID"/>
                    <input type="hidden" name="taskID" value="@item.taskID" />
                   
                }
}
            </td>
        </tr>
    }

</table>

<table class="table userfullview">
    <tr>
        <th>
            Submited Private Files
        </th>
    </tr>

    @foreach (var item in (IEnumerable<LMSProject.Models.file>)ViewBag.fileList)
    {
        <tr>
            <td>
                    @Html.Raw(item.name + " in " + item.path + " for " + item.tasks.name)

</td>
            <td>@Html.ActionLink("Download","Download","taskfiles", new { filePath = item.path },null) |
            @Html.ActionLink("Delete", "DeleteFileNow",  new { id = item.fileID }) </td>
        </tr>
    }

</table>

<table class="table userfullview">
    <tr>
        <th>
            Submited Shared Files
        </th>
    </tr>

    @foreach (var item in (IEnumerable<LMSProject.Models.file>)ViewBag.fileShList)
    {
        <tr>
            <td>
                @Html.Raw(item.name + " in " + item.path)

            </td>
            <td>
                @Html.ActionLink("Download", "Download", "taskfiles", new { filePath = item.path }, null) |
            @Html.ActionLink("Delete", "DeleteFileNow", new { id = item.fileID })
        </td>
    </tr>
    }

</table>

<table class="table userfullview">
    <tr>
        <th>
            Shared Files
        </th>
    </tr>
    @{
        string myuserName = "";
    }

    @foreach (var item in (IEnumerable<LMSProject.Models.file>)ViewBag.SharedList)
    {
        <tr>
            <td>@{
        myuserName = "";
        foreach (var utem in (List<LMSProject.Models.ApplicationUser>)ViewBag.UserList)
        {
            if (utem.Id == item.userID) { myuserName = utem.UserName; } 
        }
                }
                @Html.Raw(item.name + " in " + item.path + " from " + myuserName)

            </td>
            <td>
                @Html.ActionLink("Download", "Download", "taskfiles", new { filePath = item.path }, null)
            </td>
        </tr>
    }

</table>

@Html.Action("ViewStudentSchedule", "Calendar", new { id = ViewBag.UserId })