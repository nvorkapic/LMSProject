@model LMSProject.Models.scheduleDetail

<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>scheduleDetail</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.scheduleID, "scheduleID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("scheduleID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.scheduleID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                    @Html.LabelFor(model => model.startTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.startTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.startTime, "", new { @class = "text-danger" })
                    </div>
                </div>

            @*<div class="form-group" ng-controller="TimePickerController">
                @Html.LabelFor(model => model.startTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <uib-timepicker ng-model="starttime" show-meridian="false"></uib-timepicker>                    
                  @Html.ValidationMessageFor(model => model.startTime, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.endTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.endTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.endTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.room, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.room, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.room, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.taskID, "taskID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("taskID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.taskID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<div>
    @{
        if (Session["nav"] != null)
        {
            if (Session["nav"] == "frontend")
            {
                <p><a href="#" onclick="history.back();">Back</a></p>
            }
            else
            {
                @Html.ActionLink("Back to List", "Index")
            }
        }
        else
        {
            @Html.ActionLink("Back to List", "Index")
        }
    }

</div>

<script>
    // angular.module('LMSProject', ['ngAnimate','ui.bootstrap']);
    // angular.module('LMSProject').controller("TimePickerController", function ($scope)
    // {
    //     $scope.starttime = new Date();
    // });
</script>